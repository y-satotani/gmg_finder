1
高橋研究室の里谷が一般化ムーアグラフの探索の高効率化について発表します．
よろしくお願いします．

2
まず背景と目的についてお話しします．
データセンタになどのHPCのネットワークを，スイッチを頂点としたグラフでモデル化することを考えます．
スイッチは双方向に通信可能なことと，同一の通信ポートを有することから，ネットワークは無向正則グラフでモデル化されます．
ネットワークの遅延とグラフの平均頂点間距離の間に密接な関係があります．
そのため，平均頂点間距離が短い無向正則グラフを求める試みがこれまで行われてきました．
その一方で，Cerfらは一般化ムーアグラフを定義しました．一般化ムーアグラフとは，その平均頂点間距離が同じ頂点数と次数をもつ無向正則グラフの平均頂点間距離の理論的下界に等しいものです．
一般化ムーアグラフを探索する方法も今まで提案されてきましたが，一般化ムーアグラフの性質を利用して効率的に探索する方法はまだ知られていません．
本研究の目的は，一般化ムーアグラフの性質を利用した効率的探索方法の提案と評価です．

3
次に基本となる探索方法について説明します．
提案方法は深さ優先探索を基にしています．
手順はまず，図中に黒で示した初期グラフをスタックにプッシュします．
次に，スタックからグラフをポップし，
そのままのグラフと，こちらの候補辺を一つ取りだして追加したグラフの二つのグラフを作り，スタックにプッシュします．
このとき，プッシュしようとするグラフがこちらの定理に反するなら，プッシュしません．
例えば，辺を追加することで短い閉路ができた場合，この条件に反するのでプッシュを見送ります．
この操作を繰り返し，全ての候補辺を取りだした状態のグラフが正則で定理を満たすならば，これを一般化ムーアグラフとして出力します．

4
次に探索を効率的に行うための方法を説明します．本研究では，探索空間を削減することでこれを実現します．初期グラフに制限を加えるものと，直径の下界を用いて枝刈りを行うものの二種類を提案します．
初期グラフに加える制限については，辺を二本追加して閉路をもたせることと，辺を追加して全域木にすることの二つの方法を提案します．ここで，これらの制限が妥当であることはまだ不明であることに注意します．
枝刈りについては，直径の下界を計算して，それが先ほどの定理に反していないか調べるものです．直径の下界を計算するには，残っている候補辺をすべて追加したグラフの直径を計算します．

5
提案した探索空間の削減の有効性を検証するための実験を説明します．
最初に説明した提案手法と，それぞれの探索空間の削減手法を導入した方法の計4方法を比較します．
実験では，スタックからグラフを取り出した回数と探索に要した時間の二つの項目を測定します．探索時間については，10回の平均を計算します． 
探索する一般化ムーアグラフの頂点数nと次数kはこちらです．
実行環境はこちらです．

6
実験の結果について説明します．
初期グラフの制限については，

枝刈りについては，
しかし，

7
最後に，全域木と枝刈りの方法で1日以内に発見した一般化ムーアグラフの頂点数と次数の組を示します．
本研究では，一般化ムーアグラフの効率的探索法について説明しました．
一般的に，全域木から探索することと直径の下界を用いた枝刈りが有効であることがわかりました．
今後の課題としましては，初期状態に追加した制限の妥当性について調べることと，一般化ムーアグラフが存在しないときの平均頂点間距離最小のグラフについての研究です．
以上です．ありがとうございました．


N
バックアップに
詳しい一般化ムーアグラフの説明
全域木の構築方法

予想される質問
a.なぜ深さ優先探索なのか→
　満たすべき条件は定理1だけで， 最適解を求める必要がないので，深さ優先探索が使える
b.候補辺の順番とは何か，また，これを変更したとき，探索にどのような影響が出るのか→
　候補辺の順番は，接続する二つの頂点番号の辞書順でつけている．同じ頂点が前の方に集中すると，生息グラフであることの判定が早くできるので，有効と考えられる．
c.頂点数が少ない→
　頂点数が小さく，平均頂点間距離が小さいグラフを拡張して，より大きなグラフを構築する研究もある

